[build]
rustdocflags = ["--html-in-header", "./DOCS/rustdoc-header.html"]


[alias]

# CHECK
c = "check"
cb = "check --bin"
ce = "check --example"
cr = "check --release"
cu = "check -F=std"
cn = "check -F=no_std,safe"
cnu = "check -F=unsafe"

# CLIPPY
cl = "clippy"
clb = "clippy --bin"
cle = "clippy --example"
clr = "clippy --release"
clu = "clippy -F=std,unsafe"
cln = "clippy -F=no_std"
clnu = "clippy -F=no_std,unsafe"

# BUILD
b = "build"
bb = "build --bin"
be = "build --example"
br = "build --release"
brb = "build --release --bin"
bre = "build --release --example"
bu = "build -F=std,unsafe"
bn = "build -F=no_std"
bnu = "build -F=no_std,unsafe"

# RUN
r = "run"
rb = "run --bin"
re = "run --example"
#
rr = "run --release"
rrb = "run --release --bin"
rre = "run --release --example"
rrue = "run --release -F unsafe --example"
#
rrs = "run --release -F std"
rrsb = "run --release -F std --bin"
rrse = "run --release -F std --example"
rrsue = "run --release -F std,unsafe --example"
#
ru = "run -F=unsafe"
rub = "run -F=unsafe --bin"
rue = "run -F=unsafe --example"
#
rsu = "run -F=std,unsafe"
rsub = "run -F=std,unsafe --bin"
rsue = "run -F=std,unsafe --example"
#
rn = "run -F=no_std"
rnb = "run -F=no_std --bin"
rne = "run -F=no_std --example"
rnu = "run -F=no_std,unsafe"

# TEST
t = "test"
tl = "test --lib"
tl_ = "test --lib -- --nocapture"
tl_1 = "test --lib -- --test-threads 1 --nocapture"
td = "test --doc"

# MIRI
m = "miri test"
mu = "miri test -F=std,unsafe"
mn = "miri test -F=no_std"
mnu = "miri test -F=no_std,unsafe"

# PUBLISH
p = "publish --dry-run"
pa = "publish --dry-run --allow-dirty"
PUBLISH = "publish"
PUBLISHa = "publish --allow-dirty"

# CLEAN PACKAGE
Cp = "clean --package"
Crp = "clean --release --package"

# DOC
d = "doc --no-deps"
do = "doc --no-deps --open"
dp = "doc --no-deps --document-private-items"
dpo = "doc --no-deps --open --document-private-items"
# +nightly
nd = "doc --no-deps -F=nightly_doc"
ndp = "doc --no-deps -F=nightly_doc --document-private-items"
#
ndo = "doc --open --no-deps -F=nightly_doc"
ndpo = "doc --open --no-deps -F=nightly_doc --document-private-items"

# TREE
tr = "tree"
trf = "tree --format {p}:{f}" # with feature list
trr = "tree --format {p}:{r}" # with repository url

#/ cargo subcommands: /#

# https://crates.io/crates/cargo-expand
E = "expand"
Eb = "expand --bin"
Ee = "expand --example"
El = "expand --lib"

# https://crates.io/crates/cargo-show-asm
# Functions need not to be inlined. Defaults to release mode.
A = "asm --simplify -p devela"
Ab = "asm --simplify -p devela --bin"
Ae = "asm --simplify -p devela --example"
Al = "asm --simplify -p devela --lib"
Aub = "asm --simplify -p devela --features=unsafe,std --bin"
Aue = "asm --simplify -p devela --features=unsafe,std --example"
Aul = "asm --simplify -p devela --features=unsafe,std --lib"

# https://crates.io/crates/cargo-supply-chain
S = "supply-chain"
Sc = "supply-chain crates"
Sp = "supply-chain publishers"
Su = "supply-chain update"
